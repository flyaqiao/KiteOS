#ifndef __CONFIG_H  
#define __CONFIG_H
/*  
//-------- <<< Use Configuration Wizard in Context Menu >>> ------------------  
*/   

/*--------------------- GPIO Configuration ----------------------  
//  
// <E> GPIO Configuration
//    <E> PINSEL0
//      <O1.0..1> P0_00
//                <0=> GPIO
//                <1=> CAN-1控制器接收引脚
//                <2=> UART3发送引脚
//                <3=> I2C-1数据线（开漏）
//      <O1.2..3> P0_01
//                <0=> GPIO
//                <1=> CAN-1控制器发送引脚
//                <2=> UART3接收引脚
//                <3=> I2C-1时钟线（开漏）
//      <O1.4..5> P0_02
//                <0=> GPIO
//                <1=> UART0发送引脚
//                <2=> AD0.7引脚
//                <3=> 保留
//      <O1.6..7> P0_03
//                <0=> GPIO
//                <1=> UART0接收引脚
//                <2=> AD0.6引脚
//                <3=> 保留
//      <O1.8..9> P0_04
//                <0=> GPIO
//                <1=> I2S总线接收时钟SCK
//                <2=> CAN-2接收线
//                <3=> 定时器2捕获输入，通道0
//      <O1.10..11> P0_05
//                <0=> GPIO
//                <1=> I2S总线接收字选择WS
//                <2=> CAN-2发送线
//                <3=> 定时器2捕获输入，通道1
//      <O1.12..13> P0_06
//                <0=> GPIO
//                <1=> I2S总线接收数据线SD
//                <2=> SSP-1总线从机选择
//                <3=> 定时器2匹配输出，通道0
//      <O1.14..15> P0_07
//                <0=> GPIO
//                <1=> I2S总线发送时钟线SCK
//                <2=> SSP-1时钟线
//                <3=> 定时器2匹配输出，通道1
//      <O1.16..17> P0_08
//                <0=> GPIO
//                <1=> I2S总线发送字选择WS
//                <2=> SSP-1主输入从输出数据线
//                <3=> 定时器2匹配输出，通道2
//      <O1.17..18> P0_09
//                <0=> GPIO
//                <1=> I2S总线发送字选择SD
//                <2=> SSP-1主输出从输入数据线
//                <3=> 定时器2匹配输出，通道3
//      <O1.19..20> P0_10
//                <0=> GPIO
//                <1=> UART2发送引脚
//                <2=> I2C-2数据线(非开漏引脚)
//                <3=> 定时器3匹配输出，通道0
//      <O1.21..22> P0_11
//                <0=> GPIO
//                <1=> UART2接收引脚
//                <2=> I2C-2时钟线(非开漏引脚)
//                <3=> 定时器3匹配输出，通道1 
//      <O1.30..31> P0_15
//                <0=> GPIO
//                <1=> UART1发送引脚
//                <2=> SSP0时钟线
//                <3=> SPI时钟线
//    </E>
//    <E> PINSEL1
//      <O2.0..1> P0_16
//                <0=> GPIO
//                <1=> UART1接收引脚
//                <2=> SSP0从机选择
//                <3=> SPI从机选择
//      <O2.2..3> P0_17
//                <0=> GPIO
//                <1=> UART1清零发送信号CTS
//                <2=> SSP0主输入从输出数据线
//                <3=> SPI主入从出数据线
//      <O2.4..5> P0_18
//                <0=> GPIO
//                <1=> UART1数据载波检测输入DCD
//                <2=> SSP-0主输出从输入数据线
//                <3=> SPI主出从入数据线
//      <O2.6..7> P0_19
//                <0=> GPIO
//                <1=> UART1数据设置就绪DSR
//                <2=> 保留
//                <3=> I2C-1数据线（非开漏）
//      <O2.8..9> P0_20
//                <0=> GPIO
//                <1=> UART1终端就绪DTR
//                <2=> 保留
//                <3=> I2C-1时钟线（非开漏）
//      <O2.10..11> P0_21
//                <0=> GPIO
//                <1=> UART1振铃信号
//                <2=> 保留
//                <3=> CAN-1接收引脚
//      <O2.12..13> P0_22
//                <0=> GPIO
//                <1=> UART1请求发送引脚
//                <2=> 保留
//                <3=> CAN-1发送线
//      <O2.14..15> P0_23
//                <0=> GPIO
//                <1=> ADC-0，通道0
//                <2=> I2S接收时钟SCK 
//                <3=> 定时器3捕获输入，通道0
//      <O2.16..17> P0_24
//                <0=> GPIO
//                <1=> ADC-0，通道1
//                <2=> I2S接收字选择WS
//                <3=> 定时器3捕获输入，通道1
//      <O2.18..19> P0_25
//                <0=> GPIO
//                <1=> ADC-0，通道2
//                <2=> I2S接收数据SD
//                <3=> UART3发送引脚
//      <O2.20..21> P0_26
//                <0=> GPIO
//                <1=> ADC-0，通道3
//                <2=> DAC输出
//                <3=> UART-3接收引脚
//      <O2.22..23> P0_27
//                <0=> GPIO
//                <1=> I2C0数据输入/输出，开漏
//                <2=> USB接口I2C串行数据OTG收发器
//                <3=> 保留
//      <O2.24..25> P0_28
//                <0=> GPIO
//                <1=> I2C0时钟输入，开漏
//                <2=> USB接口I2C时钟线，OTG收发器
//                <3=> 保留
//      <O2.26..27> P0_29
//                <0=> GPIO
//                <1=> USB双向数据D+线
//                <2=> 保留
//                <3=> 保留
//      <O2.28..29> P0_30
//                <0=> GPIO
//                <1=> USB双向数据D-线
//                <2=> 保留
//                <3=> 保留
//    </E>
//    <E> PINSEL2
//      <O3.0..1> P1_00
//                <0=> GPIO
//                <1=> 以太网发送数据脚0
//                <2=> 保留
//                <3=> 保留
//      <O3.2..3> P1_01
//                <0=> GPIO
//                <1=> 以太网发送数据脚1
//                <2=> 保留
//                <3=> 保留
//      <O3.8..9> P1_04
//                <0=> GPIO
//                <1=> 以太网发送使能
//                <2=> 保留
//                <3=> 保留
//      <O3.16..17> P1_08
//                <0=> GPIO
//                <1=> 以太网载波侦测脚
//                <2=> 保留
//                <3=> 保留
//      <O3.18..19> P1_09
//                <0=> GPIO
//                <1=> 以太网接收数据脚0
//                <2=> 保留
//                <3=> 保留
//      <O3.20..21> P1_10
//                <0=> GPIO
//                <1=> 以太网接收数据脚1
//                <2=> 保留
//                <3=> 保留
//      <O3.28..29> P1_14
//                <0=> GPIO
//                <1=> 以太网接收错误
//                <2=> 保留
//                <3=> 保留
//      <O3.30..31> P1_15
//                <0=> GPIO
//                <1=> 以太网参拷时钟输入
//                <2=> 保留
//                <3=> 保留
//   </E>
//   <E> PINSEL3
//      <O4.0..1> P1_16
//                <0=> GPIO
//                <1=> 以太网MIIM时钟
//                <2=> 保留
//                <3=> 保留
//      <O4.2..3> P1_17
//                <0=> GPIO
//                <1=> 以太网MI数据输入\输出
//                <2=> 保留
//                <3=> 保留
//      <O4.4..5> P1_18
//                <0=> GPIO
//                <1=> USB GOODLINK指示脚
//                <2=> PWM1输出，通道1
//                <3=> Timer1捕获输入，通道0
//      <O4.6..7> P1_19
//                <0=> GPIO
//                <1=> 电机控制PWM通道0，输出A
//                <2=> USB端口电源使能信号
//                <3=> Timer1捕获输入，通道1
//      <O4.8..9> P1_20
//                <0=> GPIO
//                <1=> 电机控制PWM通道0，PHA
//                <2=> PWM-2输出，通道2
//                <3=> SSP-0时钟输入
//      <O4.10..11> P1_21
//                <0=> GPIO
//                <1=> 电机控制PWM，紧急中止
//                <2=> PWM-2输出，通道3
//                <3=> SSP-0从机选择
//      <O4.12..13> P1_22
//                <0=> GPIO
//                <1=> 电机控制PWM通道0，输出B
//                <2=> USB端口的电源状态
//                <3=> 定时器1匹配输出，通道0
//      <O4.14..15> P1_23
//                <0=> GPIO
//                <1=> 电机控制PWM通道1，PHB
//                <2=> PWM-1输出，通道4
//                <3=> SSP-0主机输入，从机输出
//      <O4.16..17> P1_24
//                <0=> GPIO
//                <1=> 电机控制PWM通道2，PHC
//                <2=> PWM-1输出，通道5
//                <3=> SSP-0主机输出，从机输入
//      <O4.18..19> P1_25
//                <0=> GPIO
//                <1=> 电机控制PWM通道1，输出A
//                <2=> 时钟输出引脚
//                <3=> 定时器1匹配输出，通道1
//      <O4.20..21> P1_26
//                <0=> GPIO
//                <1=> 电机控制PWM通道1，输出B
//                <2=> PWM-1输出，通道6
//                <3=> 定时器0捕获输入，通道0
//      <O4.22..23> P1_27
//                <0=> GPIO
//                <1=> 时钟输出引脚
//                <2=> USB端口过载电流状态
//                <3=> 定时器0捕获输入，通道1
//      <O4.24..25> P1_28
//                <0=> GPIO
//                <1=> 电机控制PWM通道2，输出A
//                <2=> PWM-1捕获输入，通道0 
//                <3=> 定时器0匹配输出，通道0
//      <O4.26..27> P1_29
//                <0=> GPIO
//                <1=> 电机控制PWM通道2，输出B
//                <2=> PWM-1捕获输入，通道1
//                <3=> 定时器0匹配输出，通道1
//      <O4.28..29> P1_30
//                <0=> GPIO
//                <1=> 保留
//                <2=> 存在的USB总线电源
//                <3=> ADC转换器0.通道4输入
//      <O4.30..31> P1_31
//                <0=> GPIO
//                <1=> 保留
//                <2=> SSP-1时钟线
//                <3=> ADC-0输入，通道5
//   </E>
//   <E> PINSEL4
//      <O5.0..1> P2_00
//                <0=> GPIO
//                <1=> PWM-1，通道1
//                <2=> UART1数据发送引脚
//                <3=> 保留
//      <O5.2..3> P2_01
//                <0=> GPIO
//                <1=> PWM-1，通道2
//                <2=> UART1数据接收引脚
//                <3=> 保留
//      <O5.4..5> P2_02
//                <0=> GPIO
//                <1=> PWM-1，通道3
//                <2=> UART1清零发送线
//                <3=> 保留
//      <O5.6..7> P2_03
//                <0=> GPIO
//                <1=> PWM-1，通道4
//                <2=> UART1数据载波检测线
//                <3=> 保留
//      <O5.8..9> P2_04
//                <0=> GPIO
//                <1=> PWM-1，通道5
//                <2=> UART1数据设置就绪线
//                <3=> 保留
//      <O5.10..11> P2_05
//                <0=> GPIO
//                <1=> PWM-1，通道6
//                <2=> UART1数据终端就绪线
//                <3=> 保留
//      <O5.12..13> P2_06
//                <0=> GPIO
//                <1=> PWM-1捕获输入，通道0
//                <2=> UART1振铃输入
//                <3=> 保留
//      <O5.14..15> P2_07
//                <0=> GPIO
//                <1=> CAN-2接收线
//                <2=> UART1请求发送输出
//                <3=> 保留
//      <O5.16..17> P2_08
//                <0=> GPIO
//                <1=> CAN-2发送线
//                <2=> UART2发送引脚
//                <3=> 以太网MIIM时钟
//      <O5.18..19> P2_09
//                <0=> GPIO
//                <1=> USB1软连接控制
//                <2=> UART2接收引脚
//                <3=> 以太网MIIM数据输入和输出
//      <O5.20..21> P2_10
//                <0=> GPIO
//                <1=> 外部中断0输入
//                <2=> 非屏蔽中断输入
//                <3=> 保留
//      <O5.22..23> P2_11
//                <0=> GPIO
//                <1=> 外部中断1输入
//                <2=> 保留
//                <3=> I2S发送时钟SCK
//      <O5.24..25> P2_12
//                <0=> GPIO
//                <1=> 外部中断2输入
//                <2=> 保留
//                <3=> I2S发送字选择WS
//      <O5.26..27> P2_13
//                <0=> GPIO
//                <1=> 外部中断3输入
//                <2=> 保留
//                <3=> I2S发送数据SD
//   </E>
//   <E> PINSEL7
//      <O6.18..19> P3_25
//                <0=> GPIO
//                <1=> 定时器0匹配输出，通道0
//                <2=> 保留
//                <3=> PWM-1输出，通道2
//      <O6.20..21> P3_26
//                <0=> GPIO
//                <1=> 系统节拍定时器时钟输入
//                <2=> 定时器0匹配输出，通道1
//                <3=> PWM-1输出，通道3
//   </E>
//   <E> PINSEL9
//      <O7.24..25> P4_28
//                <0=> GPIO
//                <1=> I2S接收主机时钟
//                <2=> 定时器2匹配输出，通道0
//                <3=> UART3发送引脚
//      <O7.26..27> P4_29
//                <0=> GPIO
//                <1=> I2S发送主机时钟
//                <2=> 定时器2匹配输出，通道1
//                <3=> UART3接收引脚  
//    </E>  
// </E>  
*/ 
#define GPIO_SETUP              1
#define PINSEL0_Val             0x00000055  
#define PINSEL1_Val             0x00200000  
#define PINSEL2_Val             0x00000000  
#define PINSEL3_Val             0x00014140  
#define PINSEL4_Val             0x00000000  
#define PINSEL7_Val             0x000C0000  
#define PINSEL9_Val             0x00000000  
 
/*  
//-------- <<< end of configuration section >>> ------------------------------  
*/   

#if (GPIO_SETUP == 1)
void GpioConfig(void)
{
  LPC_PINCON->PINSEL0  = PINSEL0_Val;
  LPC_PINCON->PINSEL1  = PINSEL1_Val;
  LPC_PINCON->PINSEL2  = PINSEL2_Val;
  LPC_PINCON->PINSEL3  = PINSEL3_Val;
  LPC_PINCON->PINSEL4  = PINSEL4_Val;
  LPC_PINCON->PINSEL7  = PINSEL7_Val;
  LPC_PINCON->PINSEL9  = PINSEL9_Val;
}   
#endif
#endif // __CONFIG_H
